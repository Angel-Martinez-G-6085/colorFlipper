{"version":3,"file":"js/bundle.js","mappings":"yLAAA,IAAMA,EAAe,SAACC,EAAKC,GACzB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAiB,WACrB,IAAIC,EAAMP,EAAa,EAAG,KACtBQ,EAAQR,EAAa,EAAG,KACxBS,EAAOT,EAAa,EAAG,KAC3B,oBAAcO,EAAd,YAAqBC,EAArB,YAA8BC,EAA9B,MCJWC,EAAa,WACxB,IDOMC,EACAC,ECRSC,SAASC,cAAc,WAC/BC,mBAAmB,WCLjB,qMFWHJ,EAAOE,SAASF,KAChBC,EAAYC,SAASC,cAAc,eACpBD,SAASC,cAAc,kBAE/BE,iBAAiB,SAAS,WACrCJ,EAAUK,YAAcX,IACxBK,EAAKO,MAAMC,gBAAkBb,QGXjC,QAJsB,WCCEO,SAASC,cAAc,mBACvBM,UCJb,yTCGaP,SAASC,cAAc,mBAC/BC,mBAAmB,YCJxB,KCIX,IAAMM,EAAS,ICHTC,WAEJ,WAAYC,I,4FAAO,SACjBC,KAAKD,MAAQA,E,iDAGf,WACE,IAAIE,EAAaC,OAAOC,SAASC,KAEjC,OADAH,IAAmBA,EAAa,KACzBA,I,6BAGT,YCduB,SAACI,EAASN,GAEjC,IAAMO,EAAQP,EAAMQ,MAAK,qBAAGC,MAAmBH,KAC/C,GAAaI,MAATH,EACF,OAAOA,EAAMI,UAMbA,EADmBX,EADJA,EAAMY,OAAS,GACtBD,UDQRE,CAFcZ,KAAKa,aACNb,KAAKD,Y,gFAdhBD,GDGS,CGFD,CACZ,CACEU,KAAM,IACNE,OAAQ,WACNI,IACA5B,QHDFG,SAAS0B,aACXlB,EAAOgB,aACPhB,EAAOmB,mBAGTd,OAAOe,aAAe,WACpBpB,EAAOmB,oB","sources":["webpack://colorflipper/./src/utils/changeColor.js","webpack://colorflipper/./src/components/inicio/inicio.js","webpack://colorflipper/./src/components/inicio/inicio.html","webpack://colorflipper/./src/utils/loadTemplates.js","webpack://colorflipper/./src/templates/header/header.js","webpack://colorflipper/./src/templates/header/header.html","webpack://colorflipper/./src/templates/footer/footer.js","webpack://colorflipper/./src/templates/footer/footer.html","webpack://colorflipper/./src/index.js","webpack://colorflipper/./src/router/router.js","webpack://colorflipper/./src/utils/matchPath.js","webpack://colorflipper/./src/router/routes.js"],"sourcesContent":["const randomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst generateColors = () => {\n  let red = randomNumber(0, 255);\n  let green = randomNumber(0, 255);\n  let blue = randomNumber(0, 255);\n  return `rgb(${red} ${green} ${blue})`;\n};\n\nexport const changeColor = () => {\n  const body = document.body;\n  const colorText = document.querySelector('.color-text');\n  const switchButton = document.querySelector('.switch-button');\n\n  switchButton.addEventListener('click', () => {\n    colorText.textContent = generateColors();\n    body.style.backgroundColor = generateColors();\n  });\n};\n","import './inicio.scss';\r\nimport INICIO from './inicio.html';\r\nimport { changeColor } from '../../utils/changeColor';\r\n\r\nexport const loadInicio = () => {\r\n  const header = document.querySelector('.header');\r\n  header.insertAdjacentHTML('afterend', INICIO);\r\n  changeColor();\r\n};\r\n","// Module\nvar code = \"<main> <div class=\\\"color-container container\\\"> <h1 class=\\\"color-title\\\">Background:<span class=\\\"color-text\\\"> RED</span></h1> <a href=\\\"#\\\" class=\\\"button switch-button\\\">Click me</a> </div> </main> \";\n// Exports\nexport default code;","import { loadFooter } from '../templates/footer/footer';\r\nimport { loadHeader } from '../templates/header/header';\r\n\r\nconst loadTemplates = () => {\r\n  loadHeader();\r\n  loadFooter();\r\n};\r\nexport default loadTemplates;\r\n","import './header.scss';\r\nimport HEADER from './header.html';\r\n\r\nexport const loadHeader = () => {\r\n  const mainContainer = document.querySelector('.main-container');\r\n  return (mainContainer.innerHTML = HEADER);\r\n};\r\n","// Module\nvar code = \"<hader class=\\\"header\\\"> <nav class=\\\"nav-bar\\\"> <ul class=\\\"menu container\\\"> <div class=\\\"titlewrapper\\\"> <li><a class=\\\"link titulo\\\" href=\\\"#\\\">Color Flipper</a></li> </div> <div class=\\\"links-wrapper\\\"> <li><a class=\\\"link\\\" href=\\\"#\\\">Simple</a></li> <li><a class=\\\"link\\\" href=\\\"#\\\">Hex</a></li> </div> </ul> </nav> </hader> \";\n// Exports\nexport default code;","import './footer.scss';\r\nimport FOOTER from './footer.html';\r\n\r\nexport const loadFooter = () => {\r\n  const mainContainer = document.querySelector('.main-container');\r\n  mainContainer.insertAdjacentHTML('beforeend', FOOTER);\r\n};\r\n","// Module\nvar code = \"\";\n// Exports\nexport default code;","import '../node_modules/normalize.css/normalize.css';\r\nimport '../public/styles.scss';\r\nimport Router from './router/router';\r\nimport PATHS from './router/routes';\r\n\r\nconst ROUTER = new Router(PATHS);\r\n// Carga la pagina de inicio cuando el DOM carga\r\nif (document.readyState) {\r\n  ROUTER.initRouter();\r\n  ROUTER.RenderComponent();\r\n}\r\n// Detecta ca vez que la url cambia\r\nwindow.onhashchange = () => {\r\n  ROUTER.RenderComponent();\r\n};\r\n","import { matchPath } from '../utils/matchPath';\r\n\r\nclass Router {\r\n  // Constructor\r\n  constructor(paths) {\r\n    this.paths = paths;\r\n  }\r\n  // iniciar el Router y cargar la pagina de inicio cuando la ruta / no tiene #\r\n  initRouter() {\r\n    let ActualPath = window.location.hash;\r\n    ActualPath ? '' : (ActualPath = '/');\r\n    return ActualPath;\r\n  }\r\n  // Imprime el componente si no existe imprime la pagina 404\r\n  RenderComponent() {\r\n    let reqPath = this.initRouter();\r\n    let routes = this.paths;\r\n    matchPath(reqPath, routes);\r\n  }\r\n}\r\nexport default Router;\r\n","export const matchPath = (reqPath, paths) => {\r\n  // Verifica si la ruta solicitada existe y la imprime\r\n  const found = paths.find(({ path }) => path == reqPath);\r\n  if (found != undefined) {\r\n    return found.action();\r\n\r\n    // Si la ruta solicitada no existe imprime la pagina 404\r\n  } else {\r\n    const ultimo = paths.length - 1;\r\n    const { action } = paths[ultimo];\r\n    action();\r\n  }\r\n};\r\n","import { loadInicio } from '../components/inicio/inicio';\r\nimport loadTemplates from '../utils/loadTemplates';\r\n\r\nconst PATHS = [\r\n  {\r\n    path: '/',\r\n    action: () => {\r\n      loadTemplates();\r\n      loadInicio();\r\n    },\r\n  },\r\n];\r\nexport default PATHS;\r\n"],"names":["randomNumber","min","max","Math","floor","random","generateColors","red","green","blue","loadInicio","body","colorText","document","querySelector","insertAdjacentHTML","addEventListener","textContent","style","backgroundColor","innerHTML","ROUTER","Router","paths","this","ActualPath","window","location","hash","reqPath","found","find","path","undefined","action","length","matchPath","initRouter","loadTemplates","readyState","RenderComponent","onhashchange"],"sourceRoot":""}